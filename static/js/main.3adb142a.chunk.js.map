{"version":3,"sources":["components/pages/common/mainNavigation.js","components/pages/landingPage.js","components/pages/contactPage.js","components/pages/resume/education.js","components/pages/resume/experience.js","components/pages/resume/skills.js","components/pages/resume/resumePage.js","components/main.js","App.js","serviceWorker.js","index.js","data/input.js"],"names":["MainNavigation","react_default","a","createElement","lib","Link","to","LandingPage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","ContactPage","height","paddingTop","fontSize","fontFamily","Education","marginBottom","marginTop","this","props","startYear","endYear","description","Experience","company","location","role","skills","Skills","display","skill","progress","console","log","input","ResumePage","textAlign","bio","name","color","occupation","borderTop","summary","phone","email","experience","map","item","i","key","education","courses","defaultProps","resume","Main","Switch","Route","exact","path","component","App","title","textDecoration","scroll","mainNavigation","main","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","ocupation","email-link","team-size"],"mappings":"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","file":"static/js/main.3adb142a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navigation } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\n\n\nconst MainNavigation = () => {\n  return (\n      <Navigation>\n        <Link to=\"/\">I'm a freelancer</Link>\n        <Link to=\"/resume\">Resume</Link>\n        <Link to=\"/contact\">Contact</Link>\n      </Navigation>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <img\n              src=\"https://www.shareicon.net/download/512x512/2016/06/25/786543_people_512x512.png\"\n              alt=\"avatar\"\n              className=\"avatar-img\"\n            />\n            <div className=\"banner-text\">\n              <h1>Software Engineer</h1>\n              <hr />\n\n              <p>\n                Java | Maven | Spring | Jooq | Hystrix | Karate-Dsl\n                <br />\n                Scala | Sbt | Akka | Play | Slick | Scala-tests\n                <br />\n                Swagger | Docker | Docker-compose | Kubernetes\n                <br />\n                React | Npm | Bootstrap | Material Design\n              </p>\n              <hr />\n              <div className=\"social-links\">\n\n                 {/* Linkedin */}\n                <a href=\"http://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                </a>\n                 {/* Github */}\n                <a href=\"http://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                </a>\n                 {/* Github */}\n                <a href=\"http://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-twitter-square\" aria-hidden=\"true\" />\n                </a>\n              </div>\n\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Grid, Cell, List, ListItem, ListItemContent } from \"react-mdl\";\n\nclass ContactPage extends Component {\n  render() {\n    return (\n      <div className=\"contact-body\">\n        <Grid className=\"contact-grid\">\n          <Cell col={6}>\n            <h2>Fernando Benjamin</h2>\n            <img\n              src=\"https://cdn2.iconfinder.com/data/icons/avatar-2/512/Fred_man-512.png\"\n              alt=\"avatar\"\n              style={{ height: \"250px\" }}\n            />\n\n            <p style={{ width: \"75%\", margin: \"auto\", paddingTop: \"1em\" }}>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book. It has\n              survived not only five centuries\n            </p>\n          </Cell>\n          <Cell col={6}>\n            <h2>Contact Me</h2>\n            <hr />\n            <div className=\"contact-list\">\n              <List>\n\n                {/*  PHONE NUMBER */}\n                <ListItem>\n                  <ListItemContent style={{ fontSize: \"22px\", fontFamily: \"Anton\" }} >\n                    <i className=\"fa fa-phone-square\" aria-hidden=\"true\" />\n                    +49 (0) 157 3007 8980\n                  </ListItemContent>\n                </ListItem>\n\n                {/*  EMAIL */}\n                <ListItem>\n                  <ListItemContent style={{ fontSize: \"22px\", fontFamily: \"Anton\" }} >\n                    <i className=\"fa fa-envelope-square\" aria-hidden=\"true\" />\n                    fernandobenjamin@gmail.com\n                  </ListItemContent>\n                </ListItem>\n                {/*  Linkedin */}\n                <ListItem>\n                  <ListItemContent style={{ fontSize: \"22px\", fontFamily: \"Anton\" }} >\n                    <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n                    fernandobenjamin\n                  </ListItemContent>\n                </ListItem>\n                {/*  SKYPE */}\n                <ListItem>\n                  <ListItemContent style={{ fontSize: \"22px\", fontFamily: \"Anton\" }} >\n                    <i className=\"fa fa-skype\" aria-hidden=\"true\" />\n                    fernandobenjamin\n                  </ListItemContent>\n                </ListItem>\n              </List>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ContactPage;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nclass Education extends Component {\n  render() {\n    return (\n      <div>\n        <Grid>\n          <Cell col={4}>\n            <p style={{ marginBottom: \"1px\",marginTop: \"0px\" }}>\n              {this.props.startYear} {this.props.endYear}\n            </p>\n          </Cell>\n          <Cell col={8}>\n            <p style={{ marginBottom: \"1px\",marginTop: \"0px\" }}>\n              {this.props.description}\n            </p>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nclass Experience extends Component {\n  render() {\n    return (\n      <div>\n        <Grid>\n          <Cell col={4}>\n            <p style={{ marginBottom: \"0px\"  }}>{this.props.startYear} _ {this.props.endYear}</p>\n            <p style={{ marginBottom: \"0px\" }}>{this.props.company}</p>\n            <p style={{ marginBottom: \"0px\" }}>{this.props.location}</p>\n          </Cell>\n          <Cell col={8}>\n            <h4 style={{ marginTop: \"0px\" }}>{this.props.role}</h4>\n            <p  style={{ marginBottom: \"0px\" }}>{this.props.description}</p>\n            <h6 style={{ marginTop: \"0px\", fontSize: \"10px\" }}>{this.props.skills}</h6>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n","import React, { Component } from \"react\";\nimport { ProgressBar, Grid, Cell } from \"react-mdl\";\n\nclass Skills extends Component {\n  render() {\n    return (\n      <div>\n        <Grid>\n          <Cell col={12}>\n            <div style={{ display: \"flex\" }}>\n              {this.props.skill}\n              {/* Simple Progress Bar */}\n              <ProgressBar\n                style={{ margin: \"auto\", width: \"75%\" }}\n                progress={this.props.progress}\n              />\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport Education from \"./education\";\nimport Experience from \"./experience\";\nimport Skills from \"./skills\";\nimport input from \"../../../data/input\";\n\nconsole.log(\">>\", input);\n\n// Default Props are set in the bottom of the page\nexport default class ResumePage extends Component {\n  render() {\n    //console.log(\"Resume,\",this.props.bio.name);\n\n    return (\n      <div>\n        <Grid>\n          {/* Biography */}\n          <Cell className=\"resume-left-col\" col={4}>\n            <div style={{ textAlign: \"center\" }}>\n              <img\n                src=\"https://www.shareicon.net/download/2015/09/18/103157_man_512x512.png\"\n                alt=\"avatar\"\n                height=\"200px\"\n              />\n            </div>\n            <h2 style={{ paddingTop: \"1em\" }}>{this.props.bio.name}</h2>\n            <h4 style={{ color: \"grey\" }}>{this.props.bio.occupation}</h4>\n            <hr style={{ borderTop: \"3px solid#833fb2\", width: \"50%\" }} />\n            <p>{this.props.bio.summary}</p>\n            <hr style={{ borderTop: \"3px solid#833fb2\", width: \"50%\" }} />\n            <h5>Location</h5>\n            <p>{this.props.bio.location}</p>\n            <h5>Phone</h5>\n            <p>{this.props.bio.phone}</p>\n            <h5>Email</h5>\n            <p>{this.props.bio.email}</p>\n            <hr style={{ borderTop: \"3px solid#833fb2\", width: \"50%\" }} />\n          </Cell>\n          <Cell className=\"resume-right-col\" col={8}>\n            {/* -- EXPERIENCE -- */}\n            <h2>Experience</h2>\n            {this.props.experience.map((item, i) => (\n              <Experience\n                key={i}\n                company={item.company}\n                role={item.role}\n                startYear={item.startYear}\n                endYear={item.endYear}\n                location={item.location}\n                description={item.description}\n                skills={item.skills}\n              />\n            ))}\n            <hr style={{ borderTop: \"3px solid #e22947\" }} />\n\n            {/* -- Education */}\n            <h2>Education</h2>\n            {this.props.education.map((item, i) => (\n              <Education\n                key={i}\n                startYear={item.startYear}\n                endYear={item.endYear}\n                description={item.description}\n              />\n            ))}\n            {/* -- Education */}\n            <h5>Spec. courses</h5>\n            {this.props.courses.map((item, i) => (\n              <Education\n                key={i}\n                startYear={item.startYear}\n                endYear={item.endYear}\n                description={item.description}\n              />\n            ))}\n            <hr style={{ borderTop: \"3px solid #e22947\" }} />\n\n            {/* SKILLS */}\n            <h2>Skills</h2>\n            {this.props.skills.map((item, i) => (\n              <Skills key={i} skill={item.name} progress={item.progress} />\n            ))}\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\nResumePage.defaultProps = input.resume;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LandingPage from './pages/landingPage';\nimport ContactPage from \"./pages/contactPage\";\n// import ProjectsPage from './pages/projectsPage';\nimport ResumePage from './pages/resume/resumePage';\n\nconst Main = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LandingPage} />\n      {/* <Route exact path=\"/about\" component={AboutPage} /> */}\n      <Route exact path=\"/contact\" component={ContactPage} />\n      {/* <Route exact path=\"/projects\" component={ProjectsPage} /> */}\n      <Route exact path=\"/resume\" component={ResumePage} />\n    </Switch>\n  );\n};\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Header, Drawer, Content } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\nimport MainNavigation from \"./components/pages/common/mainNavigation\";\nimport Main from \"./components/main\";\n\nvar myTitle =\"My name is Fernando Benjamin\";\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header\n            className=\"header-color\"\n            title={\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                {myTitle}\n              </Link>\n            }\n            scroll\n          >\n            <MainNavigation />\n          </Header>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = \n{\n  \"resume\": {\n    \"bio\": {\n      \"name\": \"Fernando Benjamin\",\n      \"ocupation\": \"Programmer\",\n      \"summary\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\",\n      \"location\": \"Berlin\",\n      \"phone\": \"015 73 0078 9980\",\n      \"email\": \"fernandobenjamin at gmail\",\n      \"email-link\": \"fernando.benjamin@gmail.com\"\n    },\n    \"experience\": [\n      {\n        \"company\": \"Zalando AG\",\n        \"role\": \"Logistics Core Platform Engineer\",\n        \"startYear\": \"09-2017\",\n        \"endYear\": \"01-2019\",\n        \"location\": \"Berlin\",\n        \"description\": \"Designed and implemented new infrastructure (4 services) for consolidating, controlling and executing the flow of physical units and resources in the warehouses. Conducted tech interviews with candidates for different teams at Zalando, onboard and mentored new joiners in the team, migrated team services to kubernetes.\",\n        \"skills\": \"Spring-boot, Rest API, Swagger, Agile, Planning, Alignments, Spring+, Jooq, Docker, Postgres, Kubernetes, 24x7 Monitoring and Karate-dsl.\",\n        \"team-size\": 6\n      },\n      {\n        \"company\": \"Zalando AG\",\n        \"role\": \"Logistics Platform Engineer\",\n        \"startYear\": \"09-2015\",\n        \"endYear\": \"09-2017\",\n        \"location\": \"Berlin\",\n        \"description\": \"Worked on a new architecture for the Zalando Warehouses. Worked on a high-frequent service for managing processes and ensuring process safety in a distributed environment which communicated its commands via Zalando’s main BUS system (kafka). Created an intermediary client(Java & Scala) for streaming through Zalando’s kafka wrapper. Joined Zalando’s tech interview team and logistics 24x7 team.\",\n        \"skills\": \"REST API, Java/Scala, Spring+, Hystrix, Swagger, AWS, Docker, Postgres, Monitoring, Indexes and conducting Tech interviews, AWS Cloud-formation.\",\n        \"team-size\": 3\n      },\n      {\n        \"company\": \"Zalando AG\",\n        \"role\": \"Zalando Platform Engineer\",\n        \"startYear\": \"09-2014\",\n        \"endYear\": \"09-2015\",\n        \"location\": \"Berlin\",\n        \"description\": \"Worked for Zalando’s platform team, the CI/CD-team, focused mainly on the migration of Jenkins machines from datacenter to AWS with Docker. Simplified the roll-out process for Jenkins machines by using Ansible and Docker. Designed a Rest API in scala for aggregating and unifying information from Github and Stash as part of Zalando’s next platform.\",\n        \"skills\": \"AWS, Jenkins, Docker, Ansible, Scala (Play), Slick, Postgres, Swagger.\",\n        \"team-size\": 5\n      },\n      {\n        \"company\": \"Petobel GmbH\",\n        \"role\": \"Software Engineer\",\n        \"startYear\": \"06-2014\",\n        \"endYear\": \"09-2014\",\n        \"location\": \"Berlin\",\n        \"description\": \"Worked on an Amazon based architecture, designed a Document Service to generate and upload invoices to a S3 bucket and make them accessible to the clients via mailchimp. Designed a Health Check Service and worked on the payment service for process Paypal’s Instant Payment Notifications.\",\n        \"skills\": \"Agile,, OOP, EJB, Jersey, Amazon Simple Storage Service, XDocreport, easymock, mockito, Glassfish, JPA, Metrics.\",\n        \"team-size\": 7\n      },\n      {\n        \"company\": \"Zalando GmbH\",\n        \"role\": \"Logistics Engineer\",\n        \"startYear\": \"11-2012\",\n        \"endYear\": \"06-2014\",\n        \"location\": \"Berlin\",\n        \"description\": \"Zalando Logistics’ strategic team is responsible for the processes of aggregating (disposing, batching and picking) orders for customers in all Zalando warehouses. My tasks inside the team, concerned all three processes.\",\n        \"skills\": \"Agile, OOP, Functional Programming (Guava), Maven, Nexus, Svn, Sonar, Jenkins, Tomcat, Spring, Postgres, Stored Procedures (plpgsql), Junit, Easymock, Spring Web-Services and SoapUI.\",\n        \"team-size\": 5\n      },\n      {\n        \"company\": \"CJIB\",\n        \"role\": \"Java Developer\",\n        \"startYear\": \"11-2008\",\n        \"endYear\": \"10-2012\",\n        \"location\": \"Leeuwarden (Netherlands)\",\n        \"description\": \"CJIB is the Central Fine Collection Agency for the Dutch Government. My tasks as Java Developer consisted of working in a team to implement various services: Report/Invoice-service, Custodial Sentence Service and a Central Citizen Information Service.\",\n        \"skills\": \"Agile Scrum, SOA, OOP, Maven, Nexus, Svn, Sonar, Bamboo, J2EE, OC4J, J2EE, Richfaces (JSF), Myfaces (JSF), Oracle 10g/11g, Oracle Queue, XML, JMS, Spring-Web services.\",\n        \"team-size\": 3\n      },\n      {\n        \"company\": \"Achmea FBTO\",\n        \"role\": \"C Developer\",\n        \"startYear\": \"04-2007\",\n        \"endYear\": \"11-2008\",\n        \"location\": \"Leeuwarden (Netherlands)\",\n        \"description\": \"Maintained (team) a Back-Office Life-Insurance legacy system on a DB2 AS 400 system from IBM. Implemented linear formulas for calculating the costs of new insurance products. The tasks concerned mainly database procedures in C and Embedded SQL that would provide, validate and process data for a desktop/standalone program written in Centura(C++). Wrote also DLL libraries (Windows) to allow third parties to calculate the costs for the life-insurance premiums on comparison websites.\",\n        \"skills\": \"C, Embedded SQL, Centura(C++), DLL (Dynamic Link Library), IBM DB2\",\n        \"team-size\": 3\n      },\n      {\n        \"company\": \"Atos Origin\",\n        \"role\": \"Java Developer\",\n        \"startYear\": \"09-2006\",\n        \"endYear\": \"11-2008\",\n        \"location\": \"Groningen (Netherlands)\",\n        \"description\": \"Worked on contract basis for different IT-clients. Learned the use different Java technologies and achieved new certificates to improve technical skills.\"\n      }\n    ],\n    \"education\": [\n      {\n        \"name\": \"Degree\",\n        \"description\": \"B.Sc. in the field of Computer Science (2006).\"\n      },\n      {\n        \"name\": \"Degree\",\n        \"description\": \"Industrial Automation and Electronics(2002).\"\n      }\n    ],\n    \"courses\": [\n      {\n        \"name\": \"Certificate\",\n        \"description\": \"Computing for Data Analysis, Certificate(2014).\"\n      },\n      {\n        \"name\": \"Certificate\",\n        \"description\": \"Machine Learning, Statement of Accomplishment(2014).\"\n      },\n      {\n        \"name\": \"Certificate\",\n        \"description\": \"Sun Certified Web Component Developer, Certificate (2007).\"\n      },\n      {\n        \"name\": \"Certificate\",\n        \"description\": \"Sun Certified Java Programmer, Certificate (2006).\"\n      }\n    ],\n    \"skills\": [\n      {\n        \"name\": \"Java\",\n        \"progress\": 100\n      },\n      {\n        \"name\": \"Spring\",\n        \"progress\": 70\n      },\n      {\n        \"name\": \"Postgres\",\n        \"progress\": 100\n      },\n      {\n        \"name\": \"scala\",\n        \"progress\": 80\n      },\n      {\n        \"name\": \"Play framework\",\n        \"progress\": 60\n      }\n    ]\n  }\n}\n"],"sourceRoot":""}